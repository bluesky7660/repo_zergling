<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.exion.mall.product.ProductDao">
	  <resultMap type="com.exion.mall.product.ProductDto" id="resultObj"></resultMap>
	  <sql id="selectCommon">
	  	where 1=1
				AND prodType.codeGroup_seq = 12
				AND publisher.codeGroup_seq = 3
				
				<if test="sDelNy != null and !sDelNy.equals('')">AND a.delNy = #{sDelNy}</if>
				<if test="bestNy != null and !bestNy.equals('') and bestNy != 0">AND a.bestNy = #{bestNy}</if>
				<if test="todayPickNy != null and !todayPickNy.equals('') and todayPickNy != 0">AND a.todayPickNy = #{todayPickNy}</if>
				<if test="prodType != null and !prodType.equals('')">AND a.prodType = #{prodType}</if>
				<if test="freeShippingNy != null and !freeShippingNy.equals('') and freeShippingNy != 0">AND a.freeShippingNy = #{freeShippingNy}</if>
				<if test="taxDeductionNy != null and !taxDeductionNy.equals('') and taxDeductionNy != 0">AND a.taxDeductionNy = #{taxDeductionNy}</if>
				<if test="mdPickNy != null and !mdPickNy.equals('') and mdPickNy != 0">AND a.mdPickNy = #{mdPickNy}</if>
				<if test="searchKeyword != null and !searchKeyword.equals('')">
					<choose>
						<when test="keywordType == null">
							AND(
								a.seq Like CONCAT('%',#{searchKeyword},'%')
								OR a.title Like CONCAT('%',#{searchKeyword},'%')
								OR b.name Like CONCAT('%',#{searchKeyword},'%')
								OR (
							        SELECT GROUP_CONCAT(b2.name SEPARATOR ', ')
							        FROM productAuthor c2
							        LEFT JOIN author b2 ON c2.author_seq = b2.seq
							        WHERE c2.product_seq = a.seq
							    ) LIKE CONCAT('%', #{searchKeyword}, '%')
								OR publisher.codeName Like CONCAT('%',#{searchKeyword},'%')
							)
						</when>
						<when test="keywordType == 1">AND a.seq = #{searchKeyword}</when>
						<when test="keywordType == 2">AND a.title Like CONCAT('%',#{searchKeyword},'%') </when>
						<when test="keywordType == 3">
						    AND (
							    b.name LIKE CONCAT('%', #{searchKeyword}, '%')
							    OR (
							        SELECT GROUP_CONCAT(b2.name SEPARATOR ', ')
							        FROM productAuthor c2
							        LEFT JOIN author b2 ON c2.author_seq = b2.seq
							        WHERE c2.product_seq = a.seq
							    ) LIKE CONCAT('%', #{searchKeyword}, '%')
							)
						</when>

						<when test="keywordType == 4">AND publisher.codeName Like CONCAT('%',#{searchKeyword},'%')</when>
						<!-- <when test="keywordType == 5">AND a.reviewNum Like CONCAT('%',#{searchKeyword},'%')</when> -->
					</choose>
				</if>
				<if test="(dateStart != null and !dateStart.equals(''))and (dateEnd != null and !dateEnd.equals(''))">
					<choose>
						<when test="dateType == 1"> AND a.regDate BETWEEN #{dateStart} AND #{dateEnd}</when>
						<when test="dateType == 2"> AND a.modDate BETWEEN #{dateStart} AND #{dateEnd}</when>
						<when test="dateType == 3"> AND a.makeDate BETWEEN #{dateStart} AND #{dateEnd}</when>
						<when test="dateType == 4"> AND a.shipDate BETWEEN #{dateStart} AND #{dateEnd}</when>
					</choose>
				</if>
				<choose>
					<when test="minPrice != null and maxPrice != null">
				        AND a.salePrice BETWEEN #{minPrice} AND #{maxPrice}
				    </when>
				</choose>
				<choose>
					<when test="minReview != null and maxReview != null">
				        AND a.reviewNum BETWEEN #{minReview} AND #{maxReview}
				    </when>
				</choose>
				<choose>
					<!-- <when test="makeDateFillter == 0"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL  MONTH) AND NOW()</when> -->
					<when test="makeDateFillter == 1"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW()</when>
					<when test="makeDateFillter == 2"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW()</when>
					<when test="makeDateFillter == 3"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 6 MONTH) AND NOW()</when>
					<when test="makeDateFillter == 4"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 12 MONTH) AND NOW()</when>
					<when test="makeDateFillter == 5"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 36 MONTH) AND NOW()</when>
					<when test="makeDateFillter == 6"> AND a.makeDate &lt; DATE_SUB(NOW(), INTERVAL 36 MONTH) </when>
				</choose>
	  </sql>
	  <select id="xdmProdList" resultMap="resultObj">
	  	<include refid="base.selectListUpperForMysql"/>
		  	select
				a.seq
				,(select count(aa.product_seq) from productAuthor aa  where 1=1 and aa.product_seq = a.seq) as authorCount
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preview
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.mdPickNy
			    ,a.freeShippingNy
			    ,a.taxDeductionNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			    ,prodType.codeName as prodTypeName
			    ,publisher.codeName as publisherName
			from
				product a
				left join productAuthor c on c.product_seq = a.seq and aDefaultNy = 1
				left join author b on c.author_seq = b.seq
				left join commoncode prodType on a.prodType = prodType.seq
				left join commoncode publisher on a.publisher = publisher.seq
			<include refid="selectCommon"/>
			order by a.seq desc
			<include refid="base.selectListLowerForMysql"/>
	  </select>
	  <select id="usrProdList" resultMap="resultObj">
	  	<include refid="base.selectListUpperForMysql"/>
		  	select
				a.seq
				,(select count(aa.product_seq) from productAuthor aa  where 1=1 and aa.product_seq = a.seq) as authorCount
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    <!-- ,a.imgSrc -->
			    ,f.path as imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preview
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.mdPickNy
			    ,a.freeShippingNy
			    ,a.taxDeductionNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			    ,prodType.codeName as prodTypeName
			    ,publisher.codeName as publisherName
			from
				product a
				left join productAuthor c on c.product_seq = a.seq and aDefaultNy = 1
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
				left join productupload f on f.pseq = a.seq and f.defaultNy = 1
				left join commoncode prodType on a.prodType = prodType.seq
				left join commoncode publisher on a.publisher = publisher.seq
			<include refid="selectCommon"/>
				<if test="newNy != null and !newNy.equals('') and newNy != 0">AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 2 MONTH) AND NOW()</if>
			<!-- where 1=1
				AND prodType.codeGroup_seq = 12
				AND publisher.codeGroup_seq = 3
				<if test="todayPickNy != null and !todayPickNy.equals('') and todayPickNy != 0">AND a.todayPickNy = #{todayPickNy}</if>
				
				<if test="prodType != null and !prodType.equals('')">AND a.prodType = #{prodType}</if>
				<if test="bestNy != null and !bestNy.equals('') and bestNy != 0">AND a.bestNy = #{bestNy}</if>
				<if test="freeShippingNy != null and !freeShippingNy.equals('') and freeShippingNy != 0">AND a.freeShippingNy = #{freeShippingNy}</if>
				<if test="taxDeductionNy != null and !taxDeductionNy.equals('') and taxDeductionNy != 0">AND a.taxDeductionNy = #{taxDeductionNy}</if>
				<if test="mdPickNy != null and !mdPickNy.equals('') and mdPickNy != 0">AND a.mdPickNy = #{mdPickNy}</if>
				<choose>
					<when test="minPrice != null and maxPrice != null">
				        AND a.salePrice BETWEEN #{minPrice} AND #{maxPrice}
				    </when>
				</choose>
				<choose>
					<when test="minReview != null and maxReview != null">
				        AND a.reviewNum BETWEEN #{minReview} AND #{maxReview}
				    </when>
				</choose>
				<choose>
					<when test="makeDateFillter == 0"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL  MONTH) AND NOW()</when>
					<when test="makeDateFillter == 1"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW()</when>
					<when test="makeDateFillter == 2"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW()</when>
					<when test="makeDateFillter == 3"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 6 MONTH) AND NOW()</when>
					<when test="makeDateFillter == 4"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 12 MONTH) AND NOW()</when>
					<when test="makeDateFillter == 5"> AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 36 MONTH) AND NOW()</when>
					<when test="makeDateFillter == 6"> AND a.makeDate &lt; DATE_SUB(NOW(), INTERVAL 36 MONTH) </when>
				</choose> -->
			order by a.${sortOrderString}
		<include refid="base.selectListLowerForMysql"/>
	  </select>
	  <select id="newProdList" resultMap="resultObj">
		  	select
				a.seq
				,(select count(aa.product_seq) from productAuthor aa  where 1=1 and aa.product_seq = a.seq) as authorCount
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,f.path as imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preview
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.mdPickNy
			    ,a.freeShippingNy
			    ,a.taxDeductionNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			    ,prodType.codeName as prodTypeName
			    ,publisher.codeName as publisherName
			from
				product a
				left join productAuthor c on c.product_seq = a.seq and aDefaultNy = 1
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
				left join productupload f on f.pseq = a.seq and f.defaultNy = 1
				left join commoncode prodType on a.prodType = prodType.seq
				left join commoncode publisher on a.publisher = publisher.seq
			where 1=1
				AND prodType.codeGroup_seq = 12
				AND publisher.codeGroup_seq = 3
				<!-- AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 2 MONTH) AND NOW() -->
				
			order by a.makeDate desc
			limit 10
	  </select>
	  <select id="bestProdList" resultMap="resultObj">
		  	select
				a.seq
				,(select count(aa.product_seq) from productAuthor aa  where 1=1 and aa.product_seq = a.seq) as authorCount
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,f.path as imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preview
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.mdPickNy
			    ,a.freeShippingNy
			    ,a.taxDeductionNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			    ,prodType.codeName as prodTypeName
			    ,publisher.codeName as publisherName
			from
				product a
				left join productAuthor c on c.product_seq = a.seq and aDefaultNy = 1
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
				left join productupload f on f.pseq = a.seq and f.defaultNy = 1
				left join commoncode prodType on a.prodType = prodType.seq
				left join commoncode publisher on a.publisher = publisher.seq
			where 1=1
				AND prodType.codeGroup_seq = 12
				AND publisher.codeGroup_seq = 3
				AND a.bestNy = 1
			order by a.ranking asc
			limit 5
	  </select>
	  <select id="bestCategoryProdList" resultMap="resultObj">
		  	select
				a.seq
				,(select count(aa.product_seq) from productAuthor aa  where 1=1 and aa.product_seq = a.seq) as authorCount
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,f.path as imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preview
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.mdPickNy
			    ,a.freeShippingNy
			    ,a.taxDeductionNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			    ,prodType.codeName as prodTypeName
			    ,publisher.codeName as publisherName
			from
				product a
				left join productAuthor c on c.product_seq = a.seq and aDefaultNy = 1
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
				left join productupload f on f.pseq = a.seq and f.defaultNy = 1
				left join commoncode prodType on a.prodType = prodType.seq	AND prodType.codeGroup_seq = 12
				left join commoncode publisher on a.publisher = publisher.seq AND publisher.codeGroup_seq = 3
			where 1=1
				AND a.prodType = #{prodType}
				AND a.bestNy = 1
				AND a.seq != #{seq}
			order by a.ranking asc
			limit 5
	  </select>
	  <select id="mdPickProdList" resultMap="resultObj">
		  	select
				a.seq
				,(select count(aa.product_seq) from productAuthor aa  where 1=1 and aa.product_seq = a.seq) as authorCount
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,f.path as imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preview
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.mdPickNy
			    ,a.freeShippingNy
			    ,a.taxDeductionNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			    ,prodType.codeName as prodTypeName
			    ,publisher.codeName as publisherName
			from
				product a
				left join productAuthor c on c.product_seq = a.seq and aDefaultNy = 1
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
				left join productupload f on f.pseq = a.seq and f.defaultNy = 1
				left join commoncode prodType on a.prodType = prodType.seq
				left join commoncode publisher on a.publisher = publisher.seq
			where 1=1
				AND prodType.codeGroup_seq = 12
				AND publisher.codeGroup_seq = 3
				AND a.mdPickNy = 1
			order by a.makeDate desc
	  </select>
	  <insert id="insertProd">
			insert into product(
				title
			    ,prodType
			    ,publisher
			    ,makeDate
			    ,price
			    ,sale
			    ,salePrice
			    ,point
			    ,stockQty
			    ,intro
			    ,reviewNum
			    ,shipDate
			    ,tableOfContents
			    ,publisherReview
			    ,preview
			    ,viewNumber
			    ,buyNumber
			    ,bestNy
			    ,todayPickNy
			    ,mdPickNy
			    ,freeShippingNy
			    ,taxDeductionNy
			    ,sliderText
			    ,regDate
			    ,modDate
			    ,delNy
			) value(
				#{title}
			    ,#{prodType}
			    ,#{publisher}
			    ,#{makeDate}
			    ,#{price}
			    ,#{sale}
			    ,#{salePrice}
			    ,#{point}
			    ,#{stockQty}
			    ,#{intro}
			    ,#{reviewNum}
			    ,#{shipDate}
			    ,#{tableOfContents}
				,#{publisherReview}
			    ,#{preview}
			    ,0
			    ,0
			    ,#{bestNy}
			    ,#{todayPickNy}
			    ,#{mdPickNy}
			    ,#{freeShippingNy}
			    ,#{taxDeductionNy}
			    ,#{sliderText}
			    ,now()
			    ,now()
			    ,0
			)
			<selectKey resultType="String" keyProperty="seq" order="AFTER">
				SELECT last_insert_id()
		 	</selectKey>
	  </insert>
	  <select id="prodOne" resultMap="resultObj">
		  	select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preview
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.mdPickNy
			    ,a.freeShippingNy
			    ,a.taxDeductionNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			    ,c.author_seq
			from
				product a 
				left join productAuthor c on c.product_seq = a.seq
			where 1 = 1
				and a.seq = #{seq}
				limit 1
	  </select>
	  <select id="prodUsrOne" resultMap="resultObj">
		  	select
				a.seq
			    ,a.title
			    ,(select count(aa.product_seq) from productAuthor aa  where 1=1 and aa.product_seq = a.seq) as authorCount
			    ,a.prodType
			    ,b.name
			    ,b.authorInfo
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preview
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.mdPickNy
			    ,a.freeShippingNy
			    ,a.taxDeductionNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			    ,c.author_seq
			    ,prodType.codeName as prodTypeName
			    ,publisher.codeName as publisherName
			    ,authorType.codeName as authorTypeName
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				left join commoncode prodType on a.prodType = prodType.seq
				left join commoncode publisher on a.publisher = publisher.seq
				left join commoncode authorType on b.authorType = authorType.seq
			where 1 = 1
				and a.seq = #{seq}
				limit 1
	  </select>
	  <update id="update">
		  	UPDATE product
			SET
				title = #{title}
			    ,prodType = #{prodType}
			    ,publisher = #{publisher}
			    ,makeDate = #{makeDate}
			    ,price = #{price}
			    ,sale = #{sale}
			    ,salePrice = #{salePrice}
			    ,point = #{point}
			    ,stockQty = #{stockQty}
			    ,intro = #{intro}
			    ,reviewNum = #{reviewNum}
			    ,shipDate = #{shipDate}
			    ,tableOfContents = #{tableOfContents}
			    ,publisherReview = #{publisherReview}
			    ,preview = #{preview}
			    ,bestNy = #{bestNy}
			    ,todayPickNy = #{todayPickNy}
			    ,mdPickNy = #{mdPickNy}
			    ,freeShippingNy = #{freeShippingNy}
			    ,taxDeductionNy = #{taxDeductionNy}
			    ,sliderText = #{sliderText}
				,modDate = now()
			WHERE 1=1
				AND seq = #{seq}
	  </update>
	  <select id="listCount" resultType="int">
        	SELECT COUNT(*) 
        	from
				product a
				left join productAuthor c on c.product_seq = a.seq and aDefaultNy = 1
				left join author b on c.author_seq = b.seq
				left join commoncode prodType on a.prodType = prodType.seq
				left join commoncode publisher on a.publisher = publisher.seq
        	<include refid="selectCommon"/>
        	<if test="newNy != null and !newNy.equals('') and newNy != 0">AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 2 MONTH) AND NOW()</if>
   	  </select>
	  <update id="uelete">
			UPDATE product
			SET
				delNy = 1
			WHERE 1=1
				AND seq = #{seq}
		</update>
		<update id="reviewNum">
			UPDATE product
			SET
				reviewNum = #{reviewNum}
			WHERE 1=1
				AND seq = #{seq}
		</update>
		<delete id="delete">
			delete from product
			WHERE 1=1
				AND seq = #{seq}
		</delete>
		<select id="imgList" resultMap="resultObj">
			select
				type
			    ,path as imgSrc
			from productupload
			where 1=1
				and pseq = #{seq}
			order by type
		</select>
		<select id="imgUsrList" resultMap="resultObj">
			select
				type
			    ,path as imgSrc
			    ,pseq
			from productupload
			where 1=1
				and pseq = #{seq}
		</select>
		<select id="imgUsrOne" resultMap="resultObj">
			select
				type
			    ,path as imgSrc
			from productupload
			where 1=1
				and pseq = #{seq}
				<!-- and type = #{type} -->
				and defaultNy = 1
		</select>
		<insert id="insertUploaded">
			insert into productupload(
			    type
			    ,sort
			    ,path
			    ,originalName
			    ,uuidName
			    ,ext
			    ,size
			    ,defaultNy
				,regDate
				,modDate
			    ,delNy
			    ,pseq
			) value(
				#{type}
			    ,#{sort}
			    ,#{path}
			    ,#{originalName}
			    ,#{uuidName}
			    ,#{ext}
			    ,#{size}
			    ,#{defaultNy}
			    ,now()
			    ,now()
			    ,0
			    ,#{pseq}
			)
			<selectKey resultType="String" keyProperty="seq" order="AFTER">
				SELECT last_insert_id()
		 	</selectKey>
	  </insert>
</mapper>