<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.exion.mall.product.AuthorDao">
	  <resultMap type="com.exion.mall.product.AuthorDto" id="resultObj"></resultMap>
	  <sql id="selectCommon">
	  		
			where 1=1
				<if test="sDelNy != null and !sDelNy.equals('')">AND a.delNy = #{sDelNy}</if>
				<if test="authorType != null and !authorType.equals('')">AND a.authorType = #{authorType}</if>
				<if test="searchKeyword != null and !searchKeyword.equals('')">
					<choose>
						<when test="keywordType == null">
							AND(
								a.seq Like CONCAT('%',#{searchKeyword},'%')
								OR a.name Like CONCAT('%',#{searchKeyword},'%')
								OR b.title Like CONCAT('%',#{searchKeyword},'%')
							)
						</when>
						<when test="keywordType == 1">AND a.seq = #{searchKeyword}</when>
						<when test="keywordType == 2">AND a.name Like CONCAT('%',#{searchKeyword},'%') </when>
						<when test="keywordType == 3">AND b.title Like CONCAT('%',#{searchKeyword},'%')</when>
					</choose>
				</if>
				<choose>
					<when test="dateType == 1"> AND a.regDate BETWEEN #{dateStart} AND #{dateEnd}</when>
					<when test="dateType == 2"> AND a.modDate BETWEEN #{dateStart} AND #{dateEnd}</when>
				</choose>
	  </sql>
	  <select id="prodAuthorList" resultMap="resultObj">
			select
				a.seq
			    ,a.name
			from
				author a
				left join productAuthor c on c.author_seq = a.seq
				left join product b on c.product_seq = b.seq
			WHERE 
				c.product_seq = #{seq}
			ORDER BY 
				a.seq
	  </select>
	  <select id="authorUsrList" resultMap="resultObj">
		  	<!-- select
				a.seq
			    ,a.authorType
			    ,d.codeName
			    ,a.name	
			    ,a.authorInfo
			    ,b.title
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				author a
				left join productAuthor c on c.author_seq = a.seq
				left join product b on c.product_seq = b.seq and c.author_seq = a.seq
				join commoncode d on a.authorType = d.seq
			<include refid="selectCommon"/>
				and c.product_seq = #{seq}
			order by a.seq desc -->
			SELECT 
				a.seq
			    ,a.authorType
			    ,d.codeName
			    ,a.name	
			    ,a.authorInfo
			    ,b.title
			    ,b.imgSrc
			    <!-- ,b.title as titleList    -->       
				<!-- ,c.product_seq   --> 
				,CASE
					WHEN paOther.product_seq IS NOT NULL THEN b2.title
					ELSE NULL
				END AS otherTitle
				,CASE
					WHEN paOther.product_seq IS NOT NULL THEN b2.imgSrc
					ELSE NULL
				END AS otherImgSrc     
			FROM 
				productAuthor c  
				JOIN author a ON c.author_seq = a.seq  
				left JOIN product b ON c.product_seq = b.seq 
				left JOIN productAuthor paOther ON a.seq = paOther.author_seq AND paOther.product_seq != #{seq} 
				left JOIN product b2 ON paOther.product_seq = b2.seq 
				join commoncode d on a.authorType = d.seq
			WHERE 
				c.product_seq = #{seq}   
				
			ORDER BY 
				a.seq
	  </select>
	  <select id="authorList" resultMap="resultObj">
		  	select
				a.seq
			    ,a.name
			from
				author a
			order by a.seq desc
	  </select>
	  <select id="authorXdmList" resultMap="resultObj">
		  	<include refid="base.selectListUpperForMysql"/>
		  	select
				a.seq
			    ,a.authorType
			    ,(select count(aa.author_seq) from productAuthor aa  where 1=1 and aa.author_seq = a.seq) as productCount
			    ,d.codeName
			    ,a.name	
			    ,a.authorInfo
			    ,b.title
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				author a
				left join productAuthor c on c.author_seq = a.seq and pDefaultNy = 1 
				left join product b on c.product_seq = b.seq
				join commoncode d on a.authorType = d.seq
			<include refid="selectCommon"/>
			order by a.seq desc
			<include refid="base.selectListLowerForMysql"/>
	  </select>
	  <select id="listCount" resultType="int">
        	SELECT COUNT(*) 
        	from
				author a
				left join productAuthor c on c.author_seq = a.seq and pDefaultNy = 1 
				left join product b on c.product_seq = b.seq
				join commoncode d on a.authorType = d.seq
        	<include refid="selectCommon"/>
   	  </select>
	  <insert id="insertAuthor">
			insert into author(
			    authorType
			    ,name	
			    ,authorInfo
				,regDate
				,modDate
			    ,delNy
			) value(
				#{authorType}
			    ,#{name}
			    ,#{authorInfo}
			    ,now()
			    ,now()
			    ,0
			)
			<selectKey resultType="String" keyProperty="seq" order="AFTER">
				SELECT last_insert_id()
		 	</selectKey>
	  </insert>
	  <!-- <insert id="insertAuthorProd">
			insert into author(
			    
			    ,delNy
			) value(
				#{authorType}
			    ,#{authorType}
			    ,#{authorInfo}
			    ,now()
			    ,now()
			    ,0
			)
	  </insert> -->
	  <select id="jobList" resultMap="resultObj">
		  	select
		  		a.seq
			    ,a.codeName
			from
				commoncode a
			where 1=1
				AND a.codeGroup_seq = 10
			order by a.seq desc
	  </select>
	  <select id="authorOne" resultMap="resultObj">
		  	select
				a.seq
			    ,a.authorType
			    ,d.codeName
			    ,a.name	
			    ,a.authorInfo
			    <!-- ,b.title -->
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				author a
				<!-- join productAuthor c on c.author_seq = a.seq
				join product b on c.product_seq = b.seq -->
				join commoncode d on a.authorType = d.seq
			where 1 = 1
				and a.seq = #{seq}
	  </select>
	  <!-- <select id="authorSelected" resultMap="resultObj">
		  	select
				a.seq
			    ,d.codeName
			    ,a.name	
			    ,c.
			from
				author a
				join productAuthor c on c.author_seq = a.seq
				join product b on c.product_seq = b.seq
				join commoncode d on a.authorType = d.seq
			where 1 = 1
				and a.seq = #{seq}
	  </select> -->
		<update id="update">
			UPDATE author
			SET
				name = #{name}
				,authorType = #{authorType}
				,authorInfo = #{authorInfo}
				,modDate = now()
			WHERE 1=1
				AND seq = #{seq}
		</update>
		<update id="uelete">
			UPDATE author
			SET
				delNy = 1
			WHERE 1=1
				AND seq = #{seq}
		</update>
		
		<delete id="delete">
			delete from author
			WHERE 1=1
				AND seq = #{seq}
		</delete>
		
		<!-- img insert -->
		<insert id="insertUploaded">
			insert into autherUpload(
			    type
			    ,sort
			    ,path
			    ,originalName
			    ,uuidName
			    ,ext
			    ,size
				,regDate
				,modDate
			    ,delNy
			    ,aSeq
			) value(
				#{type}
			    ,#{sort}
			    ,#{path}
			    ,#{originalName}
			    ,#{uuidName}
			    ,#{ext}
			    ,#{size}
			    ,now()
			    ,now()
			    ,0
			    ,#{aSeq}
			)
			<selectKey resultType="String" keyProperty="seq" order="AFTER">
				SELECT last_insert_id()
		 	</selectKey>
	  </insert>
</mapper>