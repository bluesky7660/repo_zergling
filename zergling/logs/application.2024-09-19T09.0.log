2024-09-19T09:04:15.005 [restartedMain] INFO c.e.ZerglingApplication - Starting ZerglingApplication using Java 17.0.11 with PID 13732 (C:\factory\ws_sts4_4240\repo_zergling\zergling\bin\main started by chlee in C:\factory\ws_sts4_4240\repo_zergling\zergling) 
2024-09-19T09:04:15.007 [restartedMain] INFO c.e.ZerglingApplication - No active profile set, falling back to 1 default profile: "default" 
2024-09-19T09:04:15.042 [restartedMain] INFO o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
2024-09-19T09:04:15.042 [restartedMain] INFO o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
2024-09-19T09:04:15.940 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port 8080 (http) 
2024-09-19T09:04:15.950 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
2024-09-19T09:04:15.953 [restartedMain] INFO o.a.c.c.StandardService - Starting service [Tomcat] 
2024-09-19T09:04:15.953 [restartedMain] INFO o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28] 
2024-09-19T09:04:15.992 [restartedMain] INFO o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext 
2024-09-19T09:04:15.993 [restartedMain] INFO o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 950 ms 
2024-09-19T09:04:16.753 [restartedMain] INFO o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729 
2024-09-19T09:04:16.768 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
2024-09-19T09:04:16.783 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
2024-09-19T09:04:16.799 [restartedMain] INFO c.e.ZerglingApplication - Started ZerglingApplication in 2.087 seconds (process running for 2.884) 
2024-09-19T09:04:16.848 [http-nio-8080-exec-3] INFO o.a.c.c.C.[.[.[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2024-09-19T09:04:16.848 [http-nio-8080-exec-3] INFO o.s.w.s.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2024-09-19T09:04:16.848 [http-nio-8080-exec-3] INFO o.s.w.s.DispatcherServlet - Completed initialization in 0 ms 
2024-09-19T09:04:22.582 [http-nio-8080-exec-4] INFO c.z.h.HikariDataSource - HikariPool-1 - Starting... 
2024-09-19T09:04:22.763 [http-nio-8080-exec-4] INFO c.z.h.p.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7db253f8 
2024-09-19T09:04:22.765 [http-nio-8080-exec-4] INFO c.z.h.HikariDataSource - HikariPool-1 - Start completed. 
2024-09-19T09:04:22.788 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 8 msec} 
2024-09-19T09:04:22.804 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:04:25.253 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:04:25.256 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:05:54.937 [File Watcher] INFO o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) 
2024-09-19T09:05:54.940 [Thread-5] INFO o.a.c.h.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"] 
2024-09-19T09:05:55.031 [Thread-5] INFO c.z.h.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2024-09-19T09:05:55.037 [Thread-5] INFO c.z.h.HikariDataSource - HikariPool-1 - Shutdown completed. 
2024-09-19T09:05:55.099 [restartedMain] INFO c.e.ZerglingApplication - Starting ZerglingApplication using Java 17.0.11 with PID 13732 (C:\factory\ws_sts4_4240\repo_zergling\zergling\bin\main started by chlee in C:\factory\ws_sts4_4240\repo_zergling\zergling) 
2024-09-19T09:05:55.099 [restartedMain] INFO c.e.ZerglingApplication - No active profile set, falling back to 1 default profile: "default" 
2024-09-19T09:05:55.270 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port 8080 (http) 
2024-09-19T09:05:55.270 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
2024-09-19T09:05:55.271 [restartedMain] INFO o.a.c.c.StandardService - Starting service [Tomcat] 
2024-09-19T09:05:55.271 [restartedMain] INFO o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28] 
2024-09-19T09:05:55.279 [restartedMain] INFO o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext 
2024-09-19T09:05:55.279 [restartedMain] INFO o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 178 ms 
2024-09-19T09:05:55.442 [restartedMain] INFO o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729 
2024-09-19T09:05:55.447 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
2024-09-19T09:05:55.449 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
2024-09-19T09:05:55.455 [restartedMain] INFO c.e.ZerglingApplication - Started ZerglingApplication in 0.381 seconds (process running for 101.539) 
2024-09-19T09:05:55.458 [restartedMain] INFO o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged 
2024-09-19T09:06:12.268 [File Watcher] INFO o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) 
2024-09-19T09:06:12.270 [Thread-7] INFO o.a.c.h.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"] 
2024-09-19T09:06:12.393 [restartedMain] INFO c.e.ZerglingApplication - Starting ZerglingApplication using Java 17.0.11 with PID 13732 (C:\factory\ws_sts4_4240\repo_zergling\zergling\bin\main started by chlee in C:\factory\ws_sts4_4240\repo_zergling\zergling) 
2024-09-19T09:06:12.393 [restartedMain] INFO c.e.ZerglingApplication - No active profile set, falling back to 1 default profile: "default" 
2024-09-19T09:06:12.523 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port 8080 (http) 
2024-09-19T09:06:12.523 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
2024-09-19T09:06:12.523 [restartedMain] INFO o.a.c.c.StandardService - Starting service [Tomcat] 
2024-09-19T09:06:12.523 [restartedMain] INFO o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28] 
2024-09-19T09:06:12.528 [restartedMain] INFO o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext 
2024-09-19T09:06:12.529 [restartedMain] INFO o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 135 ms 
2024-09-19T09:06:12.642 [restartedMain] INFO o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729 
2024-09-19T09:06:12.647 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
2024-09-19T09:06:12.650 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
2024-09-19T09:06:12.656 [restartedMain] INFO c.e.ZerglingApplication - Started ZerglingApplication in 0.279 seconds (process running for 118.74) 
2024-09-19T09:06:12.658 [restartedMain] INFO o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged 
2024-09-19T09:07:33.500 [http-nio-8080-exec-1] INFO o.a.c.c.C.[.[.[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2024-09-19T09:07:33.501 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2024-09-19T09:07:33.502 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Completed initialization in 1 ms 
2024-09-19T09:07:33.509 [http-nio-8080-exec-1] INFO c.z.h.HikariDataSource - HikariPool-2 - Starting... 
2024-09-19T09:07:33.525 [http-nio-8080-exec-1] INFO c.z.h.p.HikariPool - HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7a4099d4 
2024-09-19T09:07:33.526 [http-nio-8080-exec-1] INFO c.z.h.HikariDataSource - HikariPool-2 - Start completed. 
2024-09-19T09:07:33.529 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:33.532 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:34.543 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:34.549 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:35.226 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:35.233 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:35.897 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:35.899 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:36.344 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:36.346 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:36.764 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:36.767 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:37.079 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:37.082 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:37.321 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:37.323 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:37.523 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:37.525 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:37.908 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:37.911 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:38.264 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:38.266 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:38.670 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:38.672 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:39.021 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:39.022 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:39.368 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:39.370 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:39.745 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:39.746 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:40.109 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:40.112 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:40.485 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:40.488 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 2 msec} 
2024-09-19T09:07:40.893 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:40.895 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:41.273 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:41.276 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 2 msec} 
2024-09-19T09:07:41.493 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:41.498 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:41.886 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:41.888 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:42.314 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:42.318 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:42.506 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:42.509 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 2 msec} 
2024-09-19T09:07:42.919 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:42.921 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:43.294 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:43.297 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:43.723 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:43.726 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:43.939 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:43.941 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:44.224 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:44.227 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:44.818 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:44.821 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:45.380 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:45.382 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:46.237 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:46.239 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:46.830 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:46.831 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:47.472 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:47.473 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:48.257 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:48.259 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:48.762 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:48.763 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:49.249 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:49.251 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:49.655 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:49.656 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:07:50.063 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:07:50.064 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:07:53.647 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:07:53.649 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:13:06.780 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:13:06.783 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:13:11.391 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:13:11.394 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:13:12.214 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:13:12.216 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:13:13.118 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:13:13.118 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:13:13.828 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:13:13.829 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:14:07.996 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 3 msec} 
2024-09-19T09:14:07.997 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:15:03.847 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:15:03.847 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:15:06.137 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 6 msec} 
2024-09-19T09:15:06.139 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:15:26.962 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:15:26.964 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:27:29.585 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:27:29.585 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:27:50.485 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:27:50.485 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:27:55.983 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:27:55.983 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:31:13.779 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:31:13.787 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 8 msec} 
2024-09-19T09:31:38.189 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 15 msec} 
2024-09-19T09:31:38.190 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:31:40.786 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 12 msec} 
2024-09-19T09:31:40.788 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:31:41.956 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:31:41.958 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:32:35.002 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:32:35.002 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:32:36.799 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:32:36.799 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:32:47.827 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:32:47.830 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:32:48.654 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:32:48.657 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:34:09.879 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:34:09.882 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:34:39.803 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:34:39.804 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:34:47.439 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:34:47.442 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:34:48.848 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:34:48.849 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:34:50.278 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:34:50.281 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:34:51.070 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:34:51.071 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:34:53.146 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:34:53.160 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:35:20.258 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:35:20.258 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:35:21.909 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:35:21.909 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:35:23.152 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:35:23.152 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:35:30.295 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:35:30.298 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:22.018 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:22.023 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:24.155 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:24.169 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 14 msec} 
2024-09-19T09:36:26.955 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 8 msec} 
2024-09-19T09:36:26.959 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:28.434 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:36:28.437 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:36:29.052 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:36:29.058 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:29.608 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:29.622 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:29.990 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:29.990 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:36:30.339 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:30.339 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:36:30.689 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:30.705 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 2 msec} 
2024-09-19T09:36:31.022 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:31.022 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:36:31.395 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:31.405 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:31.748 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:36:31.751 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:32.089 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:36:32.091 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:32.466 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:32.472 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:36:32.856 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:36:32.859 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:33.220 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:33.224 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:33.604 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 9 msec} 
2024-09-19T09:36:33.606 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:34.004 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:36:34.007 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:36:34.737 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 9 msec} 
2024-09-19T09:36:34.739 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:36:44.127 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:44.127 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:36:46.563 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:46.578 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:36:47.620 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:36:47.620 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:37:14.342 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:37:14.346 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:37:15.032 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:37:15.037 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:37:15.733 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:37:15.737 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:37:16.625 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:37:16.627 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:37:41.370 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:37:41.373 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:37:42.810 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 3 msec} 
2024-09-19T09:37:42.815 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:37:44.621 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:37:44.639 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:46:45.482 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:46:45.485 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 2 msec} 
2024-09-19T09:47:43.517 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 6 msec} 
2024-09-19T09:47:43.517 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:48:14.583 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:48:14.586 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:49:29.103 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:49:29.106 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:51:26.369 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:51:26.371 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:51:57.239 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:51:57.239 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:52:00.346 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:52:00.348 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:52:04.390 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:52:04.393 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:55:04.324 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:55:04.324 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:55:06.585 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:55:06.589 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:55:07.743 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:55:07.747 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:55:08.747 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:55:08.750 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:55:09.963 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 9 msec} 
2024-09-19T09:55:09.967 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:55:10.789 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:55:10.791 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:55:11.485 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:55:11.487 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:55:12.263 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 12 msec} 
2024-09-19T09:55:12.265 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:55:15.651 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 3 msec} 
2024-09-19T09:55:15.654 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:55:16.829 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:55:16.829 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:55:18.050 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:55:18.052 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:56:30.543 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:56:30.543 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-19T09:57:09.032 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 1 msec} 
2024-09-19T09:57:09.033 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:57:10.690 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 34 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:57:10.694 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 2 msec} 
2024-09-19T09:57:12.078 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 2 msec} 
2024-09-19T09:57:12.081 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-19T09:57:54.184 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1
				 AND a.prodType = 33 

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

				  AND a.makeDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() 
			order by a.makeDate desc
 {executed in 0 msec} 
2024-09-19T09:57:54.185 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
