2024-09-18T20:16:32.534 [restartedMain] INFO c.e.ZerglingApplication - Starting ZerglingApplication using Java 17.0.11 with PID 12952 (C:\factory\ws_sts4_4240\repo_zergling\zergling\bin\main started by chlee in C:\factory\ws_sts4_4240\repo_zergling\zergling) 
2024-09-18T20:16:32.536 [restartedMain] INFO c.e.ZerglingApplication - No active profile set, falling back to 1 default profile: "default" 
2024-09-18T20:16:32.571 [restartedMain] INFO o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
2024-09-18T20:16:32.572 [restartedMain] INFO o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
2024-09-18T20:16:33.488 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port 8080 (http) 
2024-09-18T20:16:33.497 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
2024-09-18T20:16:33.501 [restartedMain] INFO o.a.c.c.StandardService - Starting service [Tomcat] 
2024-09-18T20:16:33.501 [restartedMain] INFO o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28] 
2024-09-18T20:16:33.538 [restartedMain] INFO o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext 
2024-09-18T20:16:33.539 [restartedMain] INFO o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 966 ms 
2024-09-18T20:16:34.303 [restartedMain] INFO o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729 
2024-09-18T20:16:34.321 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
2024-09-18T20:16:34.342 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
2024-09-18T20:16:34.352 [restartedMain] INFO c.e.ZerglingApplication - Started ZerglingApplication in 2.079 seconds (process running for 2.727) 
2024-09-18T20:16:35.571 [http-nio-8080-exec-1] INFO o.a.c.c.C.[.[.[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2024-09-18T20:16:35.571 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2024-09-18T20:16:35.572 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Completed initialization in 1 ms 
2024-09-18T20:16:48.291 [http-nio-8080-exec-2] INFO c.z.h.HikariDataSource - HikariPool-1 - Starting... 
2024-09-18T20:16:49.150 [http-nio-8080-exec-2] INFO c.z.h.p.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3a86316 
2024-09-18T20:16:49.156 [http-nio-8080-exec-2] INFO c.z.h.HikariDataSource - HikariPool-1 - Start completed. 
2024-09-18T20:16:49.239 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1

				        AND a.salePrice BETWEEN 0 AND 50000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 28 msec} 
2024-09-18T20:16:49.304 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 4 msec} 
2024-09-18T20:16:56.124 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1

				        AND a.salePrice BETWEEN 10000 AND 34000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 4 msec} 
2024-09-18T20:16:56.159 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 0 msec} 
2024-09-18T20:43:06.041 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1

				        AND a.salePrice BETWEEN 10000 AND 34000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 3 msec} 
2024-09-18T20:43:06.054 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 1 msec} 
2024-09-18T20:46:02.255 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1

				        AND a.salePrice BETWEEN 10000 AND 34000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 3 msec} 
2024-09-18T20:46:02.266 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 3 msec} 
2024-09-18T20:47:42.210 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select
				a.seq
			    ,a.title
			    ,a.prodType
			    ,b.name
			    ,a.publisher
			    ,a.makeDate
			    ,a.price
			    ,a.sale
			    ,a.salePrice
			    ,a.point
			    ,a.stockQty
			    ,a.imgSrc
			    ,a.intro
			    ,a.reviewNum
			    ,a.shipDate
			    ,a.tableOfContents
			    ,a.publisherReview
			    ,a.preivew
			    ,a.viewNumber
			    ,a.buyNumber
			    ,a.bestNy
			    ,a.todayPickNy
			    ,a.sliderText
				,a.regDate
				,a.modDate
			    ,a.delNy
			from
				product a
				left join productAuthor c on c.product_seq = a.seq
				left join author b on c.author_seq = b.seq
				join commoncode d on b.authorType = d.seq
			where 1=1

				        AND a.salePrice BETWEEN 10000 AND 34000

				        AND a.reviewNum BETWEEN 0.0 AND 10.0

			order by a.makeDate desc
 {executed in 5 msec} 
2024-09-18T20:47:42.221 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			a.seq
			,a.codeName
			,a.codeGroup_seq
		FROM
			commoncode a
			join codegroup b on a.codeGroup_seq = b.seq
		WHERE 1 = 1
			and a.codeGroup_seq = 4
 {executed in 5 msec} 
